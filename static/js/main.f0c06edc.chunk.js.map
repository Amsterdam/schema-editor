{"version":3,"sources":["../node_modules/@datapunt/asc-core/lib/theme sync /^/.//.*//breakpoints$","../node_modules/@datapunt/asc-core/lib/theme sync /^/.//.*//colors$","../node_modules/@datapunt/asc-core/lib/theme sync /^/.//.*//globalStyle$","../node_modules/@datapunt/asc-core/lib/theme sync /^/.//.*//typography$","../node_modules/@datapunt/asc-core/lib/theme sync /^/.//.*//spacing$","components/Tools.js","components/Dropzone.js","components/SchemaContext.js","components/Field.js","components/SchemaProperties.js","components/BasicProperties.js","components/Row.js","components/Rows.js","components/Table.js","components/Dataset.js","components/HighlightedJSON.js","components/Validation.js","components/SchemaLoader.js","App.js","index.js","../node_modules/@datapunt/asc-core/lib/theme sync /^/.//.*//layouts$"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","isValidUrl","string","URL","_","loadSchema","uri","axios","get","then","response","data","fromAmsterdamSchema","schemaUri","schema","dataset","tables","table","undefined","rows","entries","properties","property","type","$ref","format","JSON","stringify","propertyToRow","fromJS","toAmsterdamSchema","emptyRowMetaSchema","$schema","additionalProperties","required","toJS","fromEntries","row","rowToProperty","getContents","file","Promise","size","fileReader","FileReader","onload","event","target","result","readAsText","formatFileSize","Math","round","summarizeFiles","files","name","join","filesFromDrop","options","preventDefault","stopPropagation","dataTransfer","items","multiple","length","transferItem","kind","getAsFile","maxSize","this","pattern","endsWith","push","onDragOver","setState","onDropped","a","getAllContents","contents","message","state","allContents","fileContents","Dropzone","props","useState","defaultPlaceholder","placeholder","className","onDrop","style","opacity","labels","title","license","description","dateCreated","dateModified","version","status","homepage","language","theme","objective","publisher","owner","legalBasis","contactPoint","authorizationGrantor","keywords","accrualPeriodicity","crs","getSchemaUri","config","path","baseUri","SchemaContext","React","createContext","getField","field","Field","labelElement","input","onUpdate","readOnly","label","labelText","updateField","value","newData","set","remove","currentValue","setCurrentValue","useEffect","onBlur","onChange","disabled","option","key","SchemaProperties","omit","previewMode","ramdaOmit","text","includes","BasicProperties","useContext","compiledSchema","definitions","basicProperties","rowTypes","readOnlyRows","Row","onDelete","rowId","ajv","rowMetaSchemaUri","getSchema","rootProperty","onClick","variant","iconSize","icon","Rows","rowList","toArray","index","updateRow","splice","deleteRow","colSpan","addRow","Table","updateRows","color","updateDataset","Dataset","tableList","datasetSchemaUri","updateIn","updateTable","deleteTable","List","addTable","HighlightedJSON","json","jsonString","docco","Validation","valid","onValidated","role","aria-label","errors","loadSchemaFromUri","amsterdamSchemaUri","setDataset","setRemoteSchemaUriError","setLoading","catch","error","emptyDataset","Ajv","compileAsync","validate","columnSpan","small","medium","big","large","xLarge","columnPush","App","validIcon","setConfig","setSchemaUri","setValid","setCompiledSchema","justCopied","setJustCopied","remoteSchemaUri","setRemoteSchemaUri","setPreviewMode","remoteSchemaUriError","loading","useUndo","datasetState","resetDataset","reset","undo","redo","canUndo","canRedo","presentDataset","present","compileSchema","href","loaded","searchParams","URLSearchParams","window","location","search","tall","homeLink","fullWidth","navigation","onSubmit","onPreviewUrlChanged","schemaString","navigator","clipboard","writeText","setTimeout","copyToClipboard","datasetId","Blob","url","createObjectURL","document","createElement","body","appendChild","download","click","revokeObjectURL","removeChild","shiftKey","onClearClick","halign","wrap","span","parse","Provider","ReactDOM","render","getElementById"],"mappings":"2LAAA,IAAIA,EAAM,CACT,wBAAyB,IAI1B,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,oBCtBpB,IAAIH,EAAM,CACT,mBAAoB,IAIrB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,oBCtBpB,IAAIH,EAAM,CACT,wBAAyB,IAI1B,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,oBCtBpB,IAAIH,EAAM,CACT,uBAAwB,IAIzB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,oBCtBpB,IAAIH,EAAM,CACT,oBAAqB,IAItB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,qUCnBPY,EAAa,SAACC,GACvB,IAEI,OADA,IAAIC,IAAID,IACD,EACT,MAAOE,GACL,OAAO,IAIR,SAASC,EAAYC,GACxB,OAAOC,IAAMC,IAAIF,GAAKG,MAClB,SAACC,GAAD,OAAaA,EAASC,QAIvB,SAASC,EAAqBC,EAAWC,GAC9C,IAAMC,EAAO,eACRD,EADQ,CAEXE,QAASF,EAAOE,QAAU,IAAI9B,KAAI,SAAC+B,GAAD,sBAC7BA,EAD6B,CAEhCH,YAAQI,EACRC,KAAMtB,OAAOuB,QAASH,EAAMH,QAAUG,EAAMH,OAAOO,YAAe,IACrDnC,KAAI,SAACoC,GAAD,OAoCvB,SAAwBT,EAAxB,GAAkD,IAE5CU,EAF2C,mBAAblC,EAAa,KAATyB,EAAS,KAI/C,GAAIA,EAAOU,OAAP,UAAmBX,EAAnB,oBACFU,EAAO,UACF,GAAIT,EAAOU,OAAP,UAAmBX,EAAnB,wBACTU,EAAO,cACF,GAAoB,WAAhBT,EAAOS,MAAuC,cAAlBT,EAAOW,OAC5CF,EAAO,iBACF,GAAoB,WAAhBT,EAAOS,MAAuC,SAAlBT,EAAOW,OAC5CF,EAAO,YACF,GAAoB,WAAhBT,EAAOS,MAAuC,SAAlBT,EAAOW,OAC5CF,EAAO,YACF,GAAoB,WAAhBT,EAAOS,MAAuC,QAAlBT,EAAOW,OAC5CF,EAAO,WACF,GAAoB,WAAhBT,EAAOS,MAAuC,kBAAlBT,EAAOW,OAC5CF,EAAO,qBACF,GAAoB,WAAhBT,EAAOS,MAAsBT,EAAOW,OAExC,GAAoB,YAAhBX,EAAOS,KAChBA,EAAO,eACF,GAAoB,WAAhBT,EAAOS,KAChBA,EAAO,cACF,GAAoB,YAAhBT,EAAOS,KAChBA,EAAO,eACF,GAAoB,6CAAhBT,EAAOU,KAChBD,EAAO,gBACF,GAAoB,4CAAhBT,EAAOU,KAChBD,EAAO,eACF,GAAoB,+CAAhBT,EAAOU,KAChBD,EAAO,iBACF,IAAoB,0CAAhBT,EAAOU,KAGhB,MAAM,IAAI9B,MAAJ,iCAAoCgC,KAAKC,UAAUb,GAAnD,YAA8DD,IAFpEU,EAAO,aAdPA,EAAO,SAmBT,OAAO,aACLlC,MACGyB,EAFL,CAGES,OACAC,UAAMN,EACNO,YAAQP,IA/EyBU,CAAcf,EAAWS,aAI5D,OAAOO,YAAOd,GAGT,SAASe,EAAmBjB,EAAWE,GAC5C,IAAMgB,EAAqB,CACzBC,QAAS,0CACTT,KAAM,SACNU,sBAAsB,EACtBC,SAAU,CACR,KACA,WAIEpB,EAASC,EAAQoB,OAEvB,OAAO,eACFrB,EADL,CAEEE,QAASF,EAAOE,QAAU,IAAI9B,KAAI,SAAC+B,GAAD,sBAC7BA,EAD6B,CAEhCE,UAAMD,EACNJ,OAAO,eACFiB,EADC,CAEJV,WAAYJ,EAAME,MAAQtB,OAAOuC,YAAYnB,EAAME,KAAKjC,KAAI,SAACmD,GAAD,OAwDpE,SAAwBxB,EAAWwB,GACjC,IAAId,EACa,OAAbc,EAAId,KACNA,EAAO,CACLC,KAAK,GAAD,OAAKX,EAAL,qBAEgB,WAAbwB,EAAId,KACbA,EAAO,CACLC,KAAK,GAAD,OAAKX,EAAL,yBAEgB,WAAbwB,EAAId,MAIS,YAAbc,EAAId,KAHbA,EAAO,CACLA,KAAM,UAMc,WAAbc,EAAId,KACbA,EAAO,CACLA,KAAM,UAEc,cAAbc,EAAId,KACbA,EAAO,CACLA,KAAM,SACNE,OAAQ,aAEY,SAAbY,EAAId,KACbA,EAAO,CACLA,KAAM,SACNE,OAAQ,QAEY,SAAbY,EAAId,KACbA,EAAO,CACLA,KAAM,SACNE,OAAQ,QAEY,QAAbY,EAAId,KACbA,EAAO,CACLA,KAAM,SACNE,OAAQ,OAEY,kBAAbY,EAAId,KACbA,EAAO,CACLA,KAAM,SACNE,OAAQ,iBAEY,YAAbY,EAAId,KACbA,EAAO,CACLA,KAAM,WAEc,aAAbc,EAAId,KACbA,EAAO,CACLC,KAAM,4CAEc,YAAba,EAAId,KACbA,EAAO,CACLC,KAAM,2CAEc,eAAba,EAAId,KACbA,EAAO,CACLC,KAAM,8CAEc,UAAba,EAAId,OACbA,EAAO,CACLC,KAAM,0CAIV,MAAO,CACLa,EAAIhD,GADC,eAGAgD,EAHA,CAIHb,UAAMN,EACNK,UAAML,EACN7B,QAAI6B,GACDK,IApIoEe,CAAczB,EAAWwB,gB,OChDtG,SAASE,EAAaC,GACpB,OAAO,IAAIC,SAAQ,SAAC3C,GACb0C,GAASA,EAAKE,MAAsB,IAAdF,EAAKE,MAC9B5C,IAGF,IAAM6C,EAAa,IAAIC,WACvBD,EAAWE,OAAS,SAACC,GACnBhD,EAAQgD,EAAMC,OAAOC,SAGvBL,EAAWM,WAAWT,MAI1B,SAASU,EAAgBR,GACvB,OAAIA,EAAO,KACH,GAAN,OAAUA,EAAV,MACSA,EAAO,QACV,GAAN,OAAUS,KAAKC,MAAMV,EAAO,MAA5B,OAEM,GAAN,OAAUS,KAAKC,MAAMV,EAAO,KAAO,MAAnC,OAIJ,SAASW,EAAgBC,GACvB,OAAOA,EACJpE,KAAI,SAACsD,GAAD,gBAAaA,EAAKe,KAAlB,aAA2BL,EAAeV,EAAKE,MAA/C,QACJc,KAAK,IAGV,SAASC,EAAeX,EAAOY,GAM7B,GAHAZ,EAAMa,iBACNb,EAAMc,kBAEFd,EAAMe,aAAaC,QAAUJ,EAAQK,UAAgD,IAApCjB,EAAMe,aAAaC,MAAME,OAC5E,MAAM,IAAItE,MAAM,mCAGlB,GAAIoD,EAAMe,aAAaC,MAAO,CAC5B,IAAMR,EAAQ,GADc,uBAE5B,YAA2BR,EAAMe,aAAaC,MAA9C,+CAAqD,CAAC,IAA3CG,EAA0C,QACnD,GAA0B,SAAtBA,EAAaC,KAaf,MAAM,IAAIxE,MAAM,qCAZhB,IAAM8C,EAAOyB,EAAaE,YAE1B,GAAIT,EAAQU,SAAW5B,EAAKE,KAAOgB,EAAQU,QACzC,MAAM,IAAI1E,MAAJ,0CAA6C2E,KAAKnB,eAAeQ,EAAQU,SAAzE,MAGR,GAAIV,EAAQY,UAAY9B,EAAKe,KAAKgB,SAASb,EAAQY,SACjD,MAAM,IAAI5E,MAAJ,oBAAuB8C,EAAKe,KAA5B,qCAA6DG,EAAQY,UAG7EhB,EAAMkB,KAAKhC,IAda,kFAoB5B,OAAOc,EAEP,MAAM,IAAI5D,MAAM,mCAIpB,SAAS+E,EAAY3B,GACnBA,EAAMc,kBACNd,EAAMa,iB,4CAGR,WAAuBb,EAAOY,EAASgB,EAAUC,GAAjD,mBAAAC,EAAA,6DACE9B,EAAMc,kBACNd,EAAMa,iBAFR,SAKUL,EAAQG,EAAcX,EAAOY,GALvC,SAM2BmB,EAAevB,GAN1C,OAMUwB,EANV,OAQUC,EAAU1B,EAAeC,GAE/BoB,EAAS,CACPM,MAAO,UACPD,YAGEJ,GAKFA,EAJa,CACXrB,QACAwB,aAlBR,kDAuBIJ,EAAS,CACPM,MAAO,QACPD,QAAS,KAAIA,UAzBnB,2D,+BA8BeF,E,8EAAf,WAA+BvB,GAA/B,6BAAAsB,EAAA,sDACMK,EAAc,GADpB,8BAEqB3B,EAFrB,yEAEad,EAFb,kBAG+BD,EAAYC,GAH3C,QAGU0C,EAHV,OAIID,EAAYT,KAAKU,GAJrB,sSAOSD,GAPT,6E,sBAUA,IA4BeE,EA5BE,SAACC,GAAW,IAAD,EACAC,mBAAS,CACjCL,MAAO,QACPD,aAAS7D,IAHe,mBACnB8D,EADmB,KACZN,EADY,KAMtBhB,EAAU0B,EAAM1B,SAAW,GACzB4B,EAAqB5B,EAAQK,SAAW,wBAAqB,uBAC7DwB,EAAc7B,EAAQ6B,aAAeD,EAO3C,OALA5B,EAAO,eACFA,EADE,CAEL6B,gBAIA,yBAAKC,UAAS,yBAAoBR,EAAMA,OACtCS,OAAQ,SAAC3C,GAAD,O,iDAAW2C,CAAO3C,EAAOY,EAASgB,EAAUU,EAAMT,YAC1DF,WAAYA,GACZ,yBAAKe,UAAU,kBACb,6BAAOR,EAAMD,SAAWrB,EAAQ6B,aAE9B7B,EAAQU,QAAU,yBAAKsB,MAAO,CAACC,QAAS,KAAtB,QAAkCzC,EAAeQ,EAAQU,UAAkB,MCxIjGwB,EAAS,CACbvG,GAAI,KACJkC,KAAM,OACNsE,MAAO,QACPC,QAAS,UACTC,YAAa,cACbC,YAAa,eACbC,aAAc,gBACdC,QAAS,UACTC,OAAQ,SACRC,SAAU,WACVC,SAAU,WACVC,MAAO,QACPC,UAAW,YACXC,UAAW,YACXC,MAAO,QACPC,WAAY,cACZC,aAAc,+CACdC,qBAAsB,wBACtBC,SAAU,WACVC,mBAAoB,sBAKpBC,IAAK,OAOA,SAASC,EAAcC,EAAQC,GACpC,MAAM,GAAN,OAAUD,EAAOE,QAAjB,YAA4BD,EAA5B,YAAoCD,EAAOf,SAG7C,IAEekB,EAFOC,IAAMC,gB,kBCjCtBC,G,OAAW,SAAC5G,EAAM6G,GAAP,OAAkB7G,GAAQA,EAAKH,IAAIgH,GAAU7G,EAAKH,IAAIgH,GAAS,KAiEjEC,EA/DD,SAAC,GAAoF,IAkB7FC,EASAC,EA3BWhH,EAAiF,EAAjFA,KAAM6G,EAA2E,EAA3EA,MAAOI,EAAoE,EAApEA,SAAUrG,EAA0D,EAA1DA,KAAMmC,EAAoD,EAApDA,QAASmE,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,UAAW7F,EAAe,EAAfA,SAC3E8F,EAAc,SAACC,GACnB,IAAIC,EAIFA,EAHGD,EAGOtH,EAAKwH,IAAIX,EAAOS,GAFhBtH,EAAKyH,OAAOZ,GAKxBI,EAASM,IATqF,EAYxD7C,mBAASkC,EAAS5G,EAAM6G,IAZgC,mBAYzFa,EAZyF,KAY3EC,EAZ2E,KA4BhG,GAdAC,qBAAU,WACRD,EAAgBf,EAAS5G,EAAM6G,MAC9B,CAAC7G,EAAM6G,KAGNM,GAASC,KACXL,EACE,+BACGK,GAAaP,EADhB,MAOS,WAATjG,EACFoG,EACE,kBAAC,QAAD,CAAOpG,KAAK,OAAO0G,MAAOI,EACxBR,cAAuB3G,IAAb2G,GAAyBA,EACnCW,OAAQ,SAAC1F,GAAD,OAAWkF,EAAYlF,EAAMC,OAAOkF,QAC5CQ,SAAU,SAAC3F,GAAD,OAAWwF,EAAgBxF,EAAMC,OAAOkF,cAGjD,IAAa,WAAT1G,EAgBT,MAAM,IAAI7B,MAAJ,wBAA2B6B,IAfjCoG,EACE,4BACEE,cAAuB3G,IAAb2G,GAAyBA,EACnCa,cAAuBxH,IAAb2G,GAAyBA,EACnCI,MAAOI,EACPG,OAAQ,SAAC1F,GAAD,OAAWkF,EAAYlF,EAAMC,OAAOkF,QAC5CQ,SAAU,SAAC3F,GAAD,OAAWwF,EAAgBxF,EAAMC,OAAOkF,SACjDvE,EAAQxE,KAAI,SAACyJ,GAAD,OACX,4BAAQC,IAAKD,EAAOV,MAAOA,MAAOU,EAAOV,OACrCU,EAAOb,WASnB,OACE,yBAAKtC,UAAS,gBAAWtD,EAAW,WAAa,KAC9CwF,EACAC,ICpCQkB,EAvBU,SAAC,GAA2D,IAA1DlI,EAAyD,EAAzDA,KAAMiH,EAAmD,EAAnDA,SAAU9G,EAAyC,EAAzCA,OAAQgI,EAAiC,EAAjCA,KAAMJ,EAA2B,EAA3BA,SAAUK,EAAiB,EAAjBA,YAC3D7G,EAAWpB,EAAOoB,SACpBb,EAAaP,EAAOO,WAMxB,OAJIyH,GAAQA,EAAK9E,SACf3C,EAAa2H,YAAUF,EAAMzH,IAI7B,6BACGxB,OAAOuB,QAAQC,GAAYnC,KAAI,gBFcR+J,EEdQ,mBAAE3H,EAAF,iBAC9B,kBAAC,EAAD,CAAOC,KAAK,SACVwG,WFYoBkB,EEZI3H,EFazBsE,EAAOqD,IAASA,GEZf/G,SAAUA,EAASgH,SAAS5H,GAC5BkG,MAAOlG,EACPsH,IAAKtH,EACLuG,SAAUkB,GAAgBL,GAAYA,EAASQ,SAAS5H,IAA2B,SAAbA,EACtEX,KAAMA,EACNiH,SAAUA,SCPLuB,EAZS,SAAC,GAAyC,IAAxCxI,EAAuC,EAAvCA,KAAMiH,EAAiC,EAAjCA,SAAUkB,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,YAExCjI,EADqBsI,qBAAWhC,GAA9BiC,eACsBvI,OAAOwI,YAAYC,gBAEjD,OAAO,kBAAC,EAAD,CACL5I,KAAMA,EACNG,OAAQA,EACRiI,YAAaA,EACbD,KAAMA,EACNlB,SAAUA,K,gBCLR4B,EAAW,CACf,CAAC1B,MAAO,aAAcG,MAAO,MAC7B,CAACH,MAAO,SAAUG,MAAO,UACzB,CAACH,MAAO,SAAUG,MAAO,UACzB,CAACH,MAAO,UAAWG,MAAO,WAC1B,CAACH,MAAO,SAAUG,MAAO,UACzB,CAACH,MAAO,yBAA0BG,MAAO,aACzC,CAACH,MAAO,kBAAmBG,MAAO,QAClC,CAACH,MAAO,kBAAmBG,MAAO,QAClC,CAACH,MAAO,MAAOG,MAAO,OACtB,CAACH,MAAO,gBAAiBG,MAAO,iBAChC,CAACH,MAAO,UAAWG,MAAO,WAC1B,CAACH,MAAO,WAAYG,MAAO,YAC3B,CAACH,MAAO,UAAWG,MAAO,WAC1B,CAACH,MAAO,aAAcG,MAAO,cAC7B,CAACH,MAAO,QAASG,MAAO,UAGpBwB,EAAe,CAAC,KAAM,UA8FbC,EA5FH,SAAC,GAA4C,IAA3CrH,EAA0C,EAA1CA,IAAK0G,EAAqC,EAArCA,YAAanB,EAAwB,EAAxBA,SAAU+B,EAAc,EAAdA,SAClCC,EAAQvH,EAAI7B,IAAI,MADgC,EAG9B4I,qBAAWhC,GAA3ByC,EAH8C,EAG9CA,IACFC,EAAmB9C,EAJ6B,EAGzCC,OACiC,mBAIxC/E,EAHS2H,EAAIE,UAAUD,GAAkBhJ,OAEnBwI,YAAYU,aACV9H,UAAY,GAE1C,OACE,4BACE,4BACE,kBAAC,EAAD,CAAOX,KAAK,SACViG,MAAM,KACNtF,UAAQ,EACR2F,SAAUkB,GAAeU,EAAaP,SAASU,GAC/CjJ,KAAM0B,EACNuF,SAAUA,KAEd,4BACE,kBAAC,EAAD,CACErG,KAAK,SACLiG,MAAM,OACNK,SAAUkB,EACVrF,QAAS8F,EACT7I,KAAM0B,EACNuF,SAAUA,KAEd,4BACE,kBAAC,EAAD,CACErG,KAAK,SACLiG,MAAM,cACNK,SAAUkB,EACV7G,SAAUA,EAASgH,SAAS,iBAAmBO,EAAaP,SAASU,GACrEjJ,KAAM0B,EACNuF,SAAUA,KAEd,4BACE,kBAAC,EAAD,CACErG,KAAK,SACLiG,MAAM,QACNtF,SAAUA,EAASgH,SAAS,SAC5BrB,SAAUkB,EACVpI,KAAM0B,EACNuF,SAAUA,KAEZmB,EAAc,KAAQ,4BACtB,kBAAC,EAAD,CACExH,KAAK,SACLiG,MAAM,OACNtF,SAAUA,EAASgH,SAAS,QAC5BvI,KAAM0B,EACNuF,SAAUA,KAEZmB,EAAc,KAAQ,4BACtB,kBAAC,EAAD,CACExH,KAAK,SACLiG,MAAM,OACNtF,SAAUA,EAASgH,SAAS,QAC5BvI,KAAM0B,EACNuF,SAAUA,KAEZmB,EAAc,KAAQ,4BACtB,kBAAC,EAAD,CACExH,KAAK,SACLiG,MAAM,WACNtF,SAAUA,EAASgH,SAAS,YAC5BvI,KAAM0B,EACNuF,SAAUA,KAEd,4BACE,kBAAC,EAAD,CACErG,KAAK,SACLiG,MAAM,OACNtF,SAAUA,EAASgH,SAAS,QAC5BrB,SAAUkB,EACVpI,KAAM0B,EACNuF,SAAUA,KAEZmB,GAAeU,EAAaP,SAASU,GAAS,KAAQ,4BACtD,kBAAC,SAAD,CACEK,QAASN,EACTjH,KAAM,GACNwH,QAAQ,QACRC,SAAU,GACVC,KAAM,kBAAC,QAAD,WC3FhB,IAmDeC,EAnDF,SAAC,GAAqC,IAC7CC,EADUnJ,EAAkC,EAAlCA,KAAM4H,EAA4B,EAA5BA,YAAanB,EAAe,EAAfA,SAajC,OAXIzG,GAAQA,EAAKuB,OACf4H,EAAUnJ,EAAKoJ,UAAUrL,KAAI,SAACmD,EAAKmI,GAAN,OAC3B,kBAAC,EAAD,CACE5B,IAAK4B,EACLnI,IAAKA,EACL0G,YAAaA,EACbnB,SAAU,SAACvF,GAAD,OAlBlB,SAAoBlB,EAAMkB,EAAKmI,EAAO5C,GAEpCA,EADAzG,EAAOA,EAAKgH,IAAIqC,EAAOnI,IAiBEoI,CAAUtJ,EAAMkB,EAAKmI,EAAO5C,IAC/C+B,SAAU,kBAdlB,SAAoBxI,EAAMqJ,EAAO5C,GAE/BA,EADAzG,EAAOA,EAAKuJ,OAAOF,EAAO,IAaJG,CAAUxJ,EAAMqJ,EAAO5C,UAK3C,6BACE,+BACE,+BACE,4BACE,kCACA,oCACA,qCACA,qCACEmB,EAAc,KAAO,qCACrBA,EAAc,KAAQ,qCACtBA,EAAc,KAAQ,wCACxB,sCAGJ,+BACIuB,EACAvB,EAAc,KAChB,4BACE,wBAAI6B,QAAQ,KACV,kBAAC,SAAD,CAAQX,QAAS,kBAhD/B,SAAiB9I,EAAMyG,GAErBA,EADAzG,EAAOA,EAAKqD,KAAK3C,YAAO,MA+CWgJ,CAAO1J,EAAMyG,KAApC,eAMNmB,EAAe,6BACjB,2BACE,8CADF,sDAGEA,EAAc,KAAQ,wBAAIvD,UAAU,wBACpC,kCAAO,sCAAP,cAAmC,8CAAnC,KACA,kCAAO,0CAAP,cAAuC,0CAAvC,QCvDR,IAqBesF,EArBD,SAAC,GAA8C,IAA7C7J,EAA4C,EAA5CA,MAAO8H,EAAqC,EAArCA,YAAanB,EAAwB,EAAxBA,SAAU+B,EAAc,EAAdA,SACtCxI,EAAOF,EAAMT,IAAI,SAAWqB,YAAO,IAEzC,OACE,yBAAK2D,UAAU,SACb,kBAAC,EAAD,CACE7E,KAAMM,EACN8H,YAAaA,EACbnB,SAAUA,IACZ,oCACA,kBAAC,EAAD,CAAMzG,KAAMA,EACN4H,YAAaA,EACbnB,SAAU,SAACzG,GAAD,OAjBtB,SAAqBF,EAAOE,EAAMyG,GAEhCA,EADA3G,EAAQA,EAAMkH,IAAI,OAAQhH,IAgBI4J,CAAW9J,EAAOE,EAAMyG,MAChDmB,EAAc,GAChB,yBAAKvD,UAAU,SACb,kBAAC,SAAD,CAAQyE,QAASN,EAAUqB,MAAM,aAAjC,mBCjBR,SAASC,EAAelK,EAAS6G,GAC/BA,EAAS7G,GAsCX,IA0CemK,EA1CC,SAAC,GAAsC,IAKjDC,EALYpK,EAAoC,EAApCA,QAASgI,EAA2B,EAA3BA,YAAanB,EAAc,EAAdA,SAAc,EAC5BwB,qBAAWhC,GAA3ByC,EAD4C,EAC5CA,IACFuB,EAAmBpE,EAF2B,EACvCC,OACiC,WAExCjG,EAASD,EAAQP,IAAI,UAEvBQ,GAAUA,EAAO0B,OACnByI,EACE,kBAAC,cAAD,CAAa3F,UAAU,UACpBxE,EAAOuJ,UAAUrL,KAAI,SAAC+B,EAAOuJ,GAAR,OAAkB,kBAAC,WAAD,CAAU5B,IAAK4B,GAAO,qCAAc,kBAAC,EAAD,CAC1EvJ,MAAOA,EACP8H,YAAaA,EACbnB,SAAU,SAAC3G,GAAD,OAtBpB,SAAsBF,EAASE,EAAOuJ,EAAO5C,GAE3CA,EADA7G,EAAUA,EAAQsK,SAAS,CAAC,WAAW,SAACrK,GAAD,OAAYA,EAAOmH,IAAIqC,EAAOvJ,OAqBxCqK,CAAYvK,EAASE,EAAOuJ,EAAO5C,IACxD+B,SAAU,kBAlBpB,SAAsB5I,EAASyJ,EAAO5C,GAEpCA,EADA7G,EAAUA,EAAQsK,SAAS,CAAC,WAAW,SAACrK,GAAD,OAAYA,EAAO0J,OAAOF,EAAO,OAiBhDe,CAAYxK,EAASyJ,EAAO5C,YAMpD,IAAM9G,EAAS+I,EAAIE,UAAUqB,GAAkBtK,OAE/C,OACE,6BACIiI,EAAc,KAAQ,uCACtBA,EAAc,KAAQ,kBAAC,EAAD,CACtBpI,KAAMI,EACN6G,SAAU,SAAC7G,GAAD,OAAakK,EAAclK,EAAS6G,MAC9CmB,EAAc,KAAQ,kBAAC,EAAD,CACtBpI,KAAMI,EACND,OAAQA,EACRgI,KAAM,CAAC,OAAQ,UACfJ,SAAU,CAAC,qBAAsB,YACjCd,SAAU,SAAC7G,GAAD,OAAakK,EAAclK,EAAS6G,MAChD,yBAAKpC,UAAU,UACb,sCACE2F,EACApC,EAAc,KAAO,kBAAC,SAAD,CAAQkB,QAAS,kBAvEhD,SAAmBlJ,EAAS6G,GACrB7G,EAAQP,IAAI,YACfO,EAAUA,EAAQoH,IAAI,SAAUqD,YAAK,MAoBvC5D,EAjBA7G,EAAUA,EAAQsK,SAAS,CAAC,WAAW,SAACrK,GAAD,OAAYA,EAAOwD,KAAK3C,YAAO,CACpEN,KAAM,QACNJ,KAAM,CACJ,CACE9B,GAAI,KACJkC,KAAM,MAER,CACElC,GAAI,SACJkC,KAAM,UAER,CACElC,GAAI,eACJkC,KAAM,wBAqDwCkK,CAAS1K,EAAS6G,KAAzC,gB,kCCjEhB8D,EAhBS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnBC,EAAalK,KAAKC,UAAUgK,EAAM,KAAM,GAE9C,OACE,yBAAKnG,UAAU,UACb,6BACE,8BACE,kBAAC,IAAD,CAAmBa,SAAS,aAAaX,MAAOmG,SAC7CD,OCgCEE,EAxCI,SAAC,GAA6B,IAC3CC,EADgBjL,EAA0B,EAA1BA,OAAQkL,EAAkB,EAAlBA,YAEpB3C,EAAmBD,qBAAWhC,GAA9BiC,eAYR,GAVIA,IACF0C,EAAQ1C,EAAevI,IAGzByH,qBAAU,WACJyD,GACFA,EAAYD,KAEb,CAACA,EAAOC,IAEN3C,EAEE,IAAI0C,EACT,OACE,6BACE,uBAAGvG,UAAU,+BACX,0BAAMyG,KAAK,MAAMC,aAAW,cAA5B,UADF,qCAOJ,IAAMC,EAAS9C,EAAe8C,OAE9B,OACE,6BACE,uBAAG3G,UAAU,gCACX,0BAAMyG,KAAK,MAAMC,aAAW,iBAA5B,UADF,yCAIA,kBAAC,EAAD,CAAiBP,KAAMQ,KAnB3B,OAAO,MCNIC,ICgBXvC,EDhBWuC,EAbf,SAA4B9L,EAAK+L,EAAoBC,EAAYC,EAAyBC,GACtFA,GAAW,GACbnM,EAAWC,GAAKG,MACd,SAACE,GACG2L,EAAW1L,EAAoByL,EAAoB1L,IACnD6L,GAAW,MAEfC,OAAM,SAAAC,GACJH,EAAwBG,GACxBF,GAAW,OCeXG,GAAe,CACnBtN,GAAI,GACJkC,KAAM,W,8CAKR,WAA8BT,GAA9B,eAAA8D,EAAA,6DACEiF,EAAM,IAAI+C,IAAI,CACZvM,WAAYA,IAFhB,SAKyBwJ,EAAIgD,aAAa/L,GAL1C,cAKQgM,EALR,yBAMSA,GANT,4C,sBAiEA,IAAMC,GAAa,CAAEC,MAAO,EAAGC,OAAQ,EAAGC,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GAC9DC,GAAa,CAAEL,MAAO,EAAGC,OAAQ,EAAGC,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GA4LrDE,GA1LH,WAAO,IA+CbC,EA/CY,EACYlI,qBADZ,mBACT4B,EADS,KACDuG,EADC,OAEkBnI,qBAFlB,mBAETxE,EAFS,KAEE4M,EAFF,OAGUpI,qBAHV,mBAGT0G,EAHS,KAGF2B,EAHE,OAI4BrI,qBAJ5B,mBAITgE,EAJS,KAIOsE,EAJP,OAKoBtI,oBAAS,GAL7B,mBAKTuI,EALS,KAKGC,EALH,OAM8BxI,qBAN9B,mBAMTyI,EANS,KAMQC,EANR,OAOsB1I,qBAPtB,mBAOT0D,EAPS,KAOIiF,EAPJ,OAQuC3I,qBARvC,mBAQT4I,EARS,KAQa1B,EARb,OASclH,qBATd,mBAST6I,EATS,KASA1B,GATA,QAoBZ2B,YAAQtM,YAAO8K,KApBH,qBAYdyB,GAZc,eAaP9B,GAbO,GAaZnE,IACOkG,GAdK,GAcZC,MACAC,GAfY,GAeZA,KACAC,GAhBY,GAgBZA,KACAC,GAjBY,GAiBZA,QACAC,GAlBY,GAkBZA,QAIaC,GAAmBP,GAA5BQ,QAERrG,qBAAU,WACH1H,GAILN,IAAMC,IAAIK,GACPJ,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BF,MAAK,SAACK,GAAD,O,4CAAY+N,CAAc/N,MAC/BL,MAAK,SAAC4I,GACLsE,GAAkB,kBAAMtE,UAE3B,CAACxI,IAEJ0H,qBAAU,WACRhI,IAAMC,IAnHS,eAoHZC,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BF,MAAK,SAACwG,GACLuG,EAAUvG,GACVwG,EAAazG,EAAaC,EAAQ,gBAErC,SAIW/F,IAAV6K,IAEAwB,EADExB,EAEA,uBAAG+C,KAAK,cAActJ,UAAU,cAC9B,0BAAMyG,KAAK,MAAMC,aAAW,cAA5B,WAKF,uBAAG4C,KAAK,cAActJ,UAAU,cAC9B,0BAAMyG,KAAK,MAAMC,aAAW,iBAA5B,YAMR,IAAM6C,GAAS9H,GAAUoC,EAwBzB,OAtBAd,qBAAU,WACR,IAAMyG,EAAe,IAAIC,gBAAgBC,OAAOC,SAASC,QACrDJ,EAAaxO,IAAI,YACnBuN,EAAmBiB,EAAaxO,IAAI,YACpCwN,GAAe,IACNgB,EAAaxO,IAAI,SAC1BuN,EAAmBiB,EAAaxO,IAAI,WAErC,IAEH+H,qBAAU,WACH1H,GAAciN,IAIf7N,EAAW6N,GACX1B,EAAkB0B,EAAiBjN,EAAWyL,GAAYC,EAAyBC,IAEnFD,GAAwB,MAE3B,CAAC1L,EAAWiN,EAAiBxB,GAAYC,EAAyBC,KAGnE,kBAAC,gBAAD,KACE,kBAAC,cAAD,MACA,kBAAC,SAAD,CACE6C,MAAM,EACNxJ,MAAM,0BACNyJ,SAAS,gDACTC,WAAW,EAAOC,WAClB,kBAAC,YAAD,CAAWhK,UAAU,YACjB,kBAAC,YAAD,CACID,YAAY,oCACZ0C,MAAO6F,EACPrF,SAAU,SAACR,GACFA,GACDsE,GAAwB,IAGhCkD,SAAU,SAACxH,IAvH3B,SAA8BA,EAAO8F,EAAoBxB,GACrDA,GAAwB,GACpBtE,IACIhI,EAAWgI,GACX8F,EAAmB9F,GAEnBsE,GAAwB,IAkHhBmD,CAAoBzH,EAAO8F,EAAoBxB,MAGvD,yBAAK/G,UAAU,uBACb,uBAAGsJ,KAAK,qBAAR,eACCvB,GAEH,kBAAC,SAAD,CAAQvC,MAAM,UACZf,QAAS,kBA5KvB,SAA0BnJ,EAAQ+M,GAChCA,GAAc,GACd,IAAM8B,EAAejO,KAAKC,UAAUb,EAAQ,KAAM,GAClD8O,UAAUC,UAAUC,UAAUH,GAE9BT,OAAOa,YAAW,WAChBlC,GAAc,KACb,KAqKwBmC,CAAgBlO,EAAkBjB,EAAW8N,IAAiBd,KAC5ED,EAAa,UAAY,QAC5B,kBAAC,SAAD,CAAQ5C,MAAM,UACZf,QAAS,kBArKvB,SAAmBnJ,GACjB,IAAMmP,EAAYnP,EAAOzB,IAAM,UAEzBsQ,EAAejO,KAAKC,UAAUb,EAAQ,KAAM,GAC5CH,EAAO,IAAIuO,OAAOgB,KAAK,CAACP,GAAe,CAACpO,KAAM,qBAC9C4O,EAAMjB,OAAO/O,IAAIiQ,gBAAgBzP,GAEjCiE,EAAIyL,SAASC,cAAc,KACjCD,SAASE,KAAKC,YAAY5L,GAC1BA,EAAEc,MAAQ,gBAEVd,EAAEkK,KAAOqB,EACTvL,EAAE6L,SAAF,UAAgBR,EAAhB,SACArL,EAAE8L,QAEFxB,OAAO/O,IAAIwQ,gBAAgBR,GAC3BE,SAASE,KAAKK,YAAYhM,GAqJC6L,CAAS3O,EAAkBjB,EAAW8N,OADvD,YAGE5F,EAAc,KAAQ,kBAAC,SAAD,CACtBkB,QAASsE,GACT7F,UAAW+F,IAFW,eAGtB1F,EAAc,KAAQ,kBAAC,SAAD,CACtBkB,QAASuE,GACT9F,UAAWgG,IAFW,eAGtB3F,EAAc,KAAQ,kBAAC,SAAD,CAAQiC,MAAM,YACpCf,QAAS,SAACnH,GAAD,OA3JvB,SAAuBA,EAAvB,GAA2D,IAA5BwJ,EAA2B,EAA3BA,WAAY+B,EAAe,EAAfA,aACrCvL,EAAM+N,SACRxC,EAAaxM,YAAO8K,KAEpBL,EAAWzK,YAAO8K,KAuJYmE,CAAahO,EAAO,CAACwJ,cAAY+B,mBACrD3F,UAAW+F,KAAYC,IAFD,YAKhC,kBAAC,YAAD,KACI,kBAAC,MAAD,CAAKqC,OAAO,cACV,kBAAC,SAAD,CACEC,MAAI,EACJC,KAAMlE,GACNvI,KAAM6I,IACJtE,EACF,0CAAgB+E,GAAyB,KACzC,yBAAKtI,UAAU,YACX0I,EAAU,kBAAC,UAAD,MAAc,KACxBD,EAAuB,uBAAGzI,UAAU,gCAAb,iBAAgE,KACvFsI,EAAkB,KAAO,kBAAC,EAAD,CAAUpK,QAAS,CAC5CY,QAAS,QACTP,UAAU,EACVwB,YAAa,6FACVZ,UAAW,SAAChE,GAAD,OArK9B,SAAoBE,EAAWF,EAAM2L,GAGnCA,EADgB1L,EAAoBC,EADrBa,KAAKwP,MAAMvQ,EAAKmE,SAAS,MAoKFH,CAAU9D,EAAWF,EAAM2L,UAI3D,kBAAC,MAAD,CAAKyE,OAAO,cACV,kBAAC,SAAD,CACEC,MAAI,EACJC,KAAMlE,GACNvI,KAAM6I,IACN,yBAAK7H,UAAU,YACb,kBAAC,EAAc2L,SAAf,CAAwBlJ,MAAO,CAC7B4B,MAAKR,iBAAgBpC,WAGnB8H,GACE,6BACE,kBAAC,EAAD,CACEhO,QAAS4N,GACT5F,YAAaA,EACbnB,SAAU0E,MAEZ,GAEN,2BACE,8CADF,kBAC4C,0BAAM9G,UAAU,YAAW,oDADvE,kBAGA,wBAAInG,GAAG,cAAP,cACA,kBAAC,EAAD,CAAYyB,OAAQgB,EAAkBjB,EAAW8N,IAAiB3C,YAAa0B,IAC/E,wBAAIrO,GAAG,oBAAP,oBAlBF,6HAoBE,kBAAC,EAAD,CAAiBsM,KAAM7J,EAAkBjB,EAAW8N,MACpD,gFAAqD,uBAAGG,KAAK,8CAAR,uBAArD,YChRhBsC,IAASC,OAAO,kBAAC,GAAD,MAAShB,SAASiB,eAAe,U,mBCLjD,IAAIpS,EAAM,CACT,oBAAqB,IAItB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K","file":"static/js/main.f0c06edc.chunk.js","sourcesContent":["var map = {\n\t\"./default/breakpoints\": 38\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 226;","var map = {\n\t\"./default/colors\": 39\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 227;","var map = {\n\t\"./default/globalStyle\": 86\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 228;","var map = {\n\t\"./default/typography\": 87\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 229;","var map = {\n\t\"./default/spacing\": 90\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 230;","import axios from 'axios'\nimport { fromJS } from 'immutable'\n\nexport const isValidUrl = (string) => {\n    try {\n        new URL(string);\n        return true;\n    } catch (_) {\n        return false;  \n    }\n}\n\nexport function loadSchema (uri) {\n    return axios.get(uri).then(\n        (response)=> response.data\n    )\n}\n\nexport function fromAmsterdamSchema (schemaUri, schema) {\n  const dataset = {\n    ...schema,\n    tables: (schema.tables || []).map((table) => ({\n      ...table,\n      schema: undefined,\n      rows: Object.entries((table.schema && table.schema.properties) || {})\n                  .map((property) => propertyToRow(schemaUri, property))\n    }))\n  }\n\n  return fromJS(dataset)\n}\n\nexport function toAmsterdamSchema (schemaUri, dataset) {\n  const emptyRowMetaSchema = {\n    $schema: 'http://json-schema.org/draft-07/schema#',\n    type: 'object',\n    additionalProperties: false,\n    required: [\n      'id',\n      'schema'\n    ]\n  }\n\n  const schema = dataset.toJS()\n\n  return {\n    ...schema,\n    tables: (schema.tables || []).map((table) => ({\n      ...table,\n      rows: undefined,\n      schema: {\n        ...emptyRowMetaSchema,\n        properties: table.rows && Object.fromEntries(table.rows.map((row) => rowToProperty(schemaUri, row)))\n      }\n    }))\n  }\n}\n\n\n\n\nfunction propertyToRow (schemaUri, [id, schema]) {\n\n  let type\n\n  if (schema.$ref === `${schemaUri}#/definitions/id`) {\n    type = 'id'\n  } else if (schema.$ref === `${schemaUri}#/definitions/schema`) {\n    type = 'schema'\n  } else if (schema.type === 'string' && schema.format === 'date-time') {\n    type = 'date-time'\n  } else if (schema.type === 'string' && schema.format === 'time') {\n    type = 'time'\n  } else if (schema.type === 'string' && schema.format === 'date') {\n    type = 'date'\n  } else if (schema.type === 'string' && schema.format === 'uri') {\n    type = 'uri'\n  } else if (schema.type === 'string' && schema.format === 'uri-reference') {\n    type = 'uri-reference'\n  } else if (schema.type === 'string' && !schema.format) {\n    type = 'string'\n  } else if (schema.type === 'integer') {\n    type = 'integer'\n  } else if (schema.type === 'number') {\n    type = 'number'\n  } else if (schema.type === 'boolean') {\n    type = 'boolean'\n  } else if (schema.$ref === 'https://geojson.org/schema/Geometry.json') {\n    type = 'geometry'\n  } else if (schema.$ref === 'https://geojson.org/schema/Polygon.json') {\n    type = 'polygon'\n  } else if (schema.$ref === 'https://geojson.org/schema/LineString.json') {\n    type = 'linestring'\n  } else if (schema.$ref === 'https://geojson.org/schema/Point.json') {\n    type = 'point'\n  } else {\n    throw new Error(`Can't create row from: ${JSON.stringify(schema)} ${schemaUri}`)\n  }\n\n  return {\n    id,\n    ...schema,\n    type,\n    $ref: undefined,\n    format: undefined\n  }\n}\n\nfunction rowToProperty (schemaUri, row) {\n  let type\n  if (row.type === 'id') {\n    type = {\n      $ref: `${schemaUri}#/definitions/id`\n    }\n  } else if (row.type === 'schema') {\n    type = {\n      $ref: `${schemaUri}#/definitions/schema`\n    }\n  } else if (row.type === 'string') {\n    type = {\n      type: 'string'\n    }\n  } else if (row.type === 'integer') {\n    type = {\n      type: 'string'\n    }\n  } else if (row.type === 'number') {\n    type = {\n      type: 'number'\n    }\n  } else if (row.type === 'date-time') {\n    type = {\n      type: 'string',\n      format: 'date-time'\n    }\n  } else if (row.type === 'date') {\n    type = {\n      type: 'string',\n      format: 'date'\n    }\n  } else if (row.type === 'time') {\n    type = {\n      type: 'string',\n      format: 'time'\n    }\n  } else if (row.type === 'uri') {\n    type = {\n      type: 'string',\n      format: 'uri'\n    }\n  } else if (row.type === 'uri-reference') {\n    type = {\n      type: 'string',\n      format: 'uri-reference'\n    }\n  } else if (row.type === 'boolean') {\n    type = {\n      type: 'boolean'\n    }\n  } else if (row.type === 'geometry') {\n    type = {\n      $ref: 'https://geojson.org/schema/Geometry.json'\n    }\n  } else if (row.type === 'polygon') {\n    type = {\n      $ref: 'https://geojson.org/schema/Polygon.json'\n    }\n  } else if (row.type === 'linestring') {\n    type = {\n      $ref: 'https://geojson.org/schema/LineString.json'\n    }\n  } else if (row.type === 'point') {\n    type = {\n      $ref: 'https://geojson.org/schema/Point.json'\n    }\n  }\n\n  return [\n    row.id,\n    {\n      ...row,\n      $ref: undefined,\n      type: undefined,\n      id: undefined,\n      ...type\n    }\n  ]\n}\n","import React, { useState } from 'react'\n\nimport './Dropzone.css'\n\nfunction getContents (file) {\n  return new Promise((resolve) => {\n    if (!file || !file.size || file.size === 0) {\n      resolve()\n    }\n\n    const fileReader = new FileReader()\n    fileReader.onload = (event) => {\n      resolve(event.target.result)\n    }\n\n    fileReader.readAsText(file)\n  })\n}\n\nfunction formatFileSize (size) {\n  if (size < 1024) {\n    return `${size} B`\n  } else if (size < 1024 * 1024) {\n    return `${Math.round(size / 1024)} KB`\n  } else {\n    return `${Math.round(size / 1024 / 1024)} MB`\n  }\n}\n\nfunction summarizeFiles (files) {\n  return files\n    .map((file) => `${file.name} (${formatFileSize(file.size)})`)\n    .join('')\n}\n\nfunction filesFromDrop (event, options) {\n  // Code adapted from:\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/File_drag_and_drop\n  event.preventDefault()\n  event.stopPropagation()\n\n  if (event.dataTransfer.items && !options.multiple && event.dataTransfer.items.length !== 1) {\n    throw new Error('Please drop one file at a time!')\n  }\n\n  if (event.dataTransfer.items) {\n    const files = []\n    for (const transferItem of event.dataTransfer.items) {\n      if (transferItem.kind === 'file') {\n        const file = transferItem.getAsFile()\n\n        if (options.maxSize && file.size > options.maxSize) {\n          throw new Error(`File too large. Maximum size is ${this.formatFileSize(options.maxSize)}.`)\n        }\n\n        if (options.pattern && !file.name.endsWith(options.pattern)) {\n          throw new Error(`Filename \"${file.name}\" does not match pattern: ${options.pattern}`)\n        }\n\n        files.push(file)\n      } else {\n        throw new Error('Transfered item should be a file!')\n      }\n    }\n\n    return files\n  } else {\n    throw new Error('DataTransfer not supported yet!')\n  }\n}\n\nfunction onDragOver (event) {\n  event.stopPropagation()\n  event.preventDefault()\n}\n\nasync function onDrop (event, options, setState, onDropped) {\n  event.stopPropagation()\n  event.preventDefault()\n\n  try {\n    const files = filesFromDrop(event, options)\n    const contents = await getAllContents(files)\n\n    const message = summarizeFiles(files)\n\n    setState({\n      state: 'dropped',\n      message\n    })\n\n    if (onDropped) {\n      const data = {\n        files,\n        contents\n      }\n      onDropped(data)\n    }\n  } catch (err) {\n    setState({\n      state: 'error',\n      message: err.message\n    })\n  }\n}\n\nasync function getAllContents (files) {\n  let allContents = []\n  for (const file of files) {\n    const fileContents = await getContents(file)\n    allContents.push(fileContents)\n  }\n\n  return allContents\n}\n\nconst Dropzone = (props) => {\n  const [state, setState] = useState({\n    state: 'empty',\n    message: undefined\n  })\n\n  let options = props.options || {}\n  const defaultPlaceholder = options.multiple ? 'Drop files here…' : 'Drop file here…'\n  const placeholder = options.placeholder || defaultPlaceholder\n\n  options = {\n    ...options,\n    placeholder\n  }\n\n  return (\n    <div className={`dropzone state-${state.state}`}\n      onDrop={(event) => onDrop(event, options, setState, props.onDropped)}\n      onDragOver={onDragOver}>\n      <div className='dropzone-files'>\n        <div>{ state.message || options.placeholder }</div>\n        {/* { options.pattern ? <div style={{opacity: 0.5}}><code>{ options.pattern }</code></div> : '' } */}\n        { options.maxSize ? <div style={{opacity: 0.5}}>max. {formatFileSize(options.maxSize)}</div> : '' }\n      </div>\n    </div>\n  )\n}\n\nexport default Dropzone\n","import React from 'react'\n\nconst labels = {\n  id: 'ID',\n  type: 'Type',\n  title: 'Title',\n  license: 'License',\n  description: 'Description',\n  dateCreated: 'Date created',\n  dateModified: 'Date modified',\n  version: 'Version',\n  status: 'Status',\n  homepage: 'Homepage',\n  language: 'Language',\n  theme: 'Theme',\n  objective: 'Objective',\n  publisher: 'Publisher',\n  owner: 'Owner',\n  legalBasis: 'Legal Basis',\n  contactPoint: 'Contact Point. Person and (optional) e-mail.',\n  authorizationGrantor: 'Authorization Grantor',\n  keywords: 'Keywords',\n  accrualPeriodicity: 'Accrual Periodicity',\n  // spatialDescription: 'Spatial Description',\n  // spatialCoordinates: 'Spatial Coordinates',\n  // hasBeginning: 'Has Beginning',\n  // hasEnd: 'Has End',\n  crs: 'CRS'\n}\n\nexport function displayLabel (text) {\n  return labels[text] || text\n}\n\nexport function getSchemaUri (config, path) {\n  return `${config.baseUri}/${path}@${config.version}`\n}\n\nconst SchemaContext = React.createContext()\n\nexport default SchemaContext\n","import React, { useState, useEffect } from 'react'\nimport './Field.css'\n\nimport { Input } from '@datapunt/asc-ui'\n\nconst getField = (data, field) => (data && data.get(field)) ? data.get(field) : ''\n\nconst Field = ({ data, field, onUpdate, type, options, readOnly, label, labelText, required }) => {\n  const updateField = (value) => {\n    let newData\n    if (!value) {\n      newData = data.remove(field)\n    } else {\n      newData = data.set(field, value)\n    }\n\n    onUpdate(newData)\n  }\n\n  const [currentValue, setCurrentValue] = useState(getField(data, field))\n\n  useEffect(() => {\n    setCurrentValue(getField(data, field))\n  }, [data, field])\n\n  let labelElement\n  if (label || labelText) {\n    labelElement = (\n      <label>\n        {labelText || field}:\n      </label>\n    )\n  }\n\n  let input\n  if (type === 'string') {\n    input = (\n      <Input type='text' value={currentValue}\n        readOnly={readOnly !== undefined ? readOnly : false}\n        onBlur={(event) => updateField(event.target.value)}\n        onChange={(event) => setCurrentValue(event.target.value)}\n      />\n    )\n  } else if (type === 'select') {\n    input = (\n      <select\n        readOnly={readOnly !== undefined ? readOnly : false}\n        disabled={readOnly !== undefined ? readOnly : false}\n        value={currentValue}\n        onBlur={(event) => updateField(event.target.value)}\n        onChange={(event) => setCurrentValue(event.target.value)}>\n        {options.map((option) => (\n          <option key={option.value} value={option.value}>\n            { option.label }\n          </option>\n        ))}\n      </select>\n    )\n  } else {\n    throw new Error(`Invalid type: ${type}`)\n  }\n\n  return (\n    <div className={`field ${required ? 'required' : ''}`}>\n      {labelElement}\n      {input}\n    </div>\n  )\n}\n\nexport default Field\n","import React from 'react'\nimport { omit as ramdaOmit } from 'ramda'\n\nimport Field from './Field'\nimport { displayLabel } from './SchemaContext'\n\nconst SchemaProperties = ({data, onUpdate, schema, omit, disabled, previewMode}) => {\n  const required = schema.required\n  let properties = schema.properties\n\n  if (omit && omit.length) {\n    properties = ramdaOmit(omit, properties)\n  }\n\n  return (\n    <div>\n      {Object.entries(properties).map(([property, definition]) => (\n        <Field type='string'\n          labelText={displayLabel(property)}\n          required={required.includes(property)}\n          field={property}\n          key={property}\n          readOnly={previewMode || (disabled && disabled.includes(property)) || property === 'type'}\n          data={data}\n          onUpdate={onUpdate} />))}\n    </div>\n  )\n}\n\nexport default SchemaProperties\n","import React, { useContext } from 'react'\n\nimport SchemaContext from './SchemaContext'\nimport SchemaProperties from './SchemaProperties'\n\nconst BasicProperties = ({data, onUpdate, omit, previewMode}) => {\n  const { compiledSchema } = useContext(SchemaContext)\n  const schema = compiledSchema.schema.definitions.basicProperties\n\n  return <SchemaProperties\n    data={data}\n    schema={schema}\n    previewMode={previewMode}\n    omit={omit}\n    onUpdate={onUpdate} />\n}\n\nexport default BasicProperties\n","import React, { useContext } from 'react'\n\nimport { Button } from '@datapunt/asc-ui'\nimport { Close } from '@datapunt/asc-assets'\n\nimport SchemaContext, { getSchemaUri } from './SchemaContext'\n\nimport Field from './Field'\n\nconst rowTypes = [\n  {label: 'Identifier', value: 'id'},\n  {label: 'Schema', value: 'schema'},\n  {label: 'String', value: 'string'},\n  {label: 'Integer', value: 'integer'},\n  {label: 'Number', value: 'number'},\n  {label: 'Date & Time (ISO 8601)', value: 'date-time'},\n  {label: 'Date (ISO 8601)', value: 'date'},\n  {label: 'Time (ISO 8601)', value: 'time'},\n  {label: 'URI', value: 'uri'},\n  {label: 'URI Reference', value: 'uri-reference'},\n  {label: 'Boolean', value: 'boolean'},\n  {label: 'Geometry', value: 'geometry'},\n  {label: 'Polygon', value: 'polygon'},\n  {label: 'LineString', value: 'linestring'},\n  {label: 'Point', value: 'point'}\n]\n\nconst readOnlyRows = ['id', 'schema']\n\nconst Row = ({row, previewMode, onUpdate, onDelete}) => {\n  const rowId = row.get('id')\n\n  const { ajv, config } = useContext(SchemaContext)\n  const rowMetaSchemaUri = getSchemaUri(config, 'row-meta-schema')\n  const schema = ajv.getSchema(rowMetaSchemaUri).schema\n\n  const rootProperty = schema.definitions.rootProperty\n  const required = rootProperty.required || [];\n\n  return (\n    <tr>\n      <td>\n        <Field type='string'\n          field='id'\n          required\n          readOnly={previewMode || readOnlyRows.includes(rowId)}\n          data={row}\n          onUpdate={onUpdate} />\n      </td>\n      <td>\n        <Field\n          type='select'\n          field='type'\n          readOnly={previewMode}\n          options={rowTypes}\n          data={row}\n          onUpdate={onUpdate} />\n      </td>\n      <td>\n        <Field\n          type='string'\n          field='description'\n          readOnly={previewMode}\n          required={required.includes('description') && !readOnlyRows.includes(rowId)}\n          data={row}\n          onUpdate={onUpdate} />\n      </td>\n      <td>\n        <Field\n          type='string'\n          field='title'\n          required={required.includes('title')}\n          readOnly={previewMode}\n          data={row}\n          onUpdate={onUpdate} />\n      </td>\n      { previewMode ? null : (<td>\n        <Field\n          type='string'\n          field='auth'\n          required={required.includes('auth')}\n          data={row}\n          onUpdate={onUpdate} />\n      </td>) }\n      { previewMode ? null : (<td>\n        <Field\n          type='string'\n          field='prov'\n          required={required.includes('prov')}\n          data={row}\n          onUpdate={onUpdate} />\n      </td>) }\n      { previewMode ? null : (<td>\n        <Field\n          type='string'\n          field='relation'\n          required={required.includes('relation')}\n          data={row}\n          onUpdate={onUpdate} />\n      </td>) }\n      <td>\n        <Field\n          type='string'\n          field='unit'\n          required={required.includes('unit')}\n          readOnly={previewMode}\n          data={row}\n          onUpdate={onUpdate} />\n      </td>\n      { previewMode || readOnlyRows.includes(rowId) ? null : (<td>\n        <Button\n          onClick={onDelete}\n          size={25}\n          variant='blank'\n          iconSize={20}\n          icon={<Close />} />\n      </td>) }\n    </tr>\n  )\n}\n\nexport default Row\n","import React from 'react'\nimport './Rows.css'\n\nimport { fromJS } from 'immutable'\n\nimport { Button } from '@datapunt/asc-ui'\n\nimport Row from './Row'\n\nfunction addRow (rows, onUpdate) {\n  rows = rows.push(fromJS({}))\n  onUpdate(rows)\n}\n\nfunction updateRow (rows, row, index, onUpdate) {\n  rows = rows.set(index, row)\n  onUpdate(rows)\n}\n\nfunction deleteRow (rows, index, onUpdate) {\n  rows = rows.splice(index, 1)\n  onUpdate(rows)\n}\n\nconst Rows = ({ rows, previewMode, onUpdate }) => {\n  let rowList\n  if (rows && rows.size) {\n    rowList = rows.toArray().map((row, index) => (\n      <Row\n        key={index}\n        row={row}\n        previewMode={previewMode}\n        onUpdate={(row) => updateRow(rows, row, index, onUpdate)}\n        onDelete={() => deleteRow(rows, index, onUpdate)} />\n    ))\n  }\n\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Type</th>\n            <th>Desc.</th>\n            <th>Title</th>\n            { previewMode ? null :(<th>Auth.</th>) }\n            { previewMode ? null : (<th>Prov.</th>) }\n            { previewMode ? null : (<th>Relation</th>) }\n            <th>Unit</th>\n          </tr>\n        </thead>\n        <tbody>\n          { rowList }\n          { previewMode ? null : (\n          <tr>\n            <td colSpan='4'>\n              <Button onClick={() => addRow(rows, onUpdate)}>Add row</Button>\n            </td>\n          </tr>\n          )}\n        </tbody>\n      </table>\n      { previewMode ? (<hr/>) : (\n      <p>\n        <strong>Important!</strong> Each table is expected to have at least two rows:\n      </p>) }\n      { previewMode ? null : (<ol className='override-asc-ui-list'>\n        <li>ID <code>\"id\"</code> with type <strong>Identifier</strong>;</li>\n        <li>ID <code>\"schema\"</code> with type <strong>Schema</strong>.</li>\n      </ol>) }\n    </div>\n  )\n}\n\nexport default Rows\n","import React from 'react'\nimport { fromJS } from 'immutable'\nimport './Table.css'\n\nimport { Button } from '@datapunt/asc-ui'\n\nimport BasicProperties from './BasicProperties'\nimport Rows from './Rows'\n\nfunction updateRows (table, rows, onUpdate) {\n  table = table.set('rows', rows)\n  onUpdate(table)\n}\n\nconst Table = ({table, previewMode, onUpdate, onDelete}) => {\n  const rows = table.get('rows') || fromJS([])\n\n  return (\n    <div className='table'>\n      <BasicProperties\n        data={table}\n        previewMode={previewMode}\n        onUpdate={onUpdate} />\n      <h3>Rows</h3>\n      <Rows rows={rows}\n            previewMode={previewMode}\n            onUpdate={(rows) => updateRows(table, rows, onUpdate)} />\n      { previewMode ? '' : (\n      <div className='right'>\n        <Button onClick={onDelete} color='secondary' >Delete table</Button>\n      </div>) }\n    </div>\n  )\n}\n\nexport default Table\n","import React, { useContext } from 'react'\n\nimport SchemaContext, { getSchemaUri } from './SchemaContext'\n\nimport { Button, OrderedList, ListItem } from '@datapunt/asc-ui'\n\nimport { List, fromJS } from 'immutable'\n\nimport Table from './Table'\nimport BasicProperties from './BasicProperties'\nimport SchemaProperties from './SchemaProperties'\n\nfunction updateDataset (dataset, onUpdate) {\n  onUpdate(dataset)\n}\n\nfunction addTable (dataset, onUpdate) {\n  if (!dataset.get('tables')) {\n    dataset = dataset.set('tables', List([]))\n  }\n\n  dataset = dataset.updateIn(['tables'], (tables) => tables.push(fromJS({\n    type: 'table',\n    rows: [\n      {\n        id: 'id',\n        type: 'id'\n      },\n      {\n        id: 'schema',\n        type: 'schema'\n      },\n      {\n        id: 'contactPoint',\n        type: 'contactPoint'\n      }\n    ]\n  })))\n  onUpdate(dataset)\n}\n\nfunction updateTable (dataset, table, index, onUpdate) {\n  dataset = dataset.updateIn(['tables'], (tables) => tables.set(index, table))\n  onUpdate(dataset)\n}\n\nfunction deleteTable (dataset, index, onUpdate) {\n  dataset = dataset.updateIn(['tables'], (tables) => tables.splice(index, 1))\n  onUpdate(dataset)\n}\n\nconst Dataset = ({dataset, previewMode, onUpdate}) => {\n  const { ajv, config } = useContext(SchemaContext)\n  const datasetSchemaUri = getSchemaUri(config, 'dataset')\n\n  const tables = dataset.get('tables')\n  let tableList\n  if (tables && tables.size) {\n    tableList = (\n      <OrderedList className='tables'>\n        {tables.toArray().map((table, index) => <ListItem key={index}><h3>Table</h3><Table\n          table={table}\n          previewMode={previewMode}\n          onUpdate={(table) => updateTable(dataset, table, index, onUpdate)}\n          onDelete={() => deleteTable(dataset, index, onUpdate)} />\n        </ListItem>)}\n      </OrderedList>\n    )\n  }\n\n  const schema = ajv.getSchema(datasetSchemaUri).schema\n\n  return (\n    <div>\n      { previewMode ? null : (<h2>Dataset</h2>) }\n      { previewMode ? null : (<BasicProperties\n        data={dataset}\n        onUpdate={(dataset) => updateDataset(dataset, onUpdate)} />) }\n      { previewMode ? null : (<SchemaProperties\n        data={dataset}\n        schema={schema}\n        omit={['type', 'tables']}\n        disabled={['spatialCoordinates', 'keywords']}\n        onUpdate={(dataset) => updateDataset(dataset, onUpdate)} />) }\n      <div className='tables'>\n        <h3>Tables</h3>\n        { tableList }\n        { previewMode ? null : <Button onClick={() => addTable(dataset, onUpdate)}>Add table</Button> }\n      </div>\n    </div>\n  )\n}\n\nexport default Dataset\n","import React from 'react'\nimport './HighlightedJSON.css'\n\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { docco } from 'react-syntax-highlighter/dist/cjs/styles/hljs'\n\nconst HighlightedJSON = ({ json }) => {\n  const jsonString = JSON.stringify(json, null, 2)\n\n  return (\n    <div className='schema'>\n      <pre>\n        <code>\n          <SyntaxHighlighter language='javascript' style={docco}>\n            {jsonString}\n          </SyntaxHighlighter>\n        </code>\n      </pre>\n    </div>\n  )\n}\n\nexport default HighlightedJSON\n","import React, { useContext, useEffect } from 'react'\nimport './Validation.css'\n\nimport HighlightedJSON from './HighlightedJSON'\nimport SchemaContext from './SchemaContext'\n\nconst Validation = ({ schema, onValidated }) => {\n  let valid\n  const { compiledSchema } = useContext(SchemaContext)\n\n  if (compiledSchema) {\n    valid = compiledSchema(schema)\n  }\n\n  useEffect(() => {\n    if (onValidated) {\n      onValidated(valid)\n    }\n  }, [valid, onValidated])\n\n  if (!compiledSchema) {\n    return null\n  } else if (valid) {\n    return (\n      <div>\n        <p className='validation validation-valid'>\n          <span role='img' aria-label='Validated!'>✅</span>\n          The Amsterdam Schema is correct!\n        </p>\n      </div>\n    )\n  } else {\n    const errors = compiledSchema.errors\n\n    return (\n      <div>\n        <p className='validation validation-errors'>\n          <span role='img' aria-label='Errors found!'>❌</span>\n          The Amsterdam Schema contains errors:\n        </p>\n        <HighlightedJSON json={errors} />\n      </div>\n    )\n  }\n}\n\nexport default Validation\n","import { loadSchema, fromAmsterdamSchema } from './Tools'\n\nfunction loadSchemaFromUri (uri, amsterdamSchemaUri, setDataset, setRemoteSchemaUriError, setLoading) {\n    setLoading(true)\n  loadSchema(uri).then(\n    (data) => {\n        setDataset(fromAmsterdamSchema(amsterdamSchemaUri, data))\n        setLoading(false)\n    }\n  ).catch(error => {\n      setRemoteSchemaUriError(error)\n      setLoading(false)\n  })\n}\n\nexport default loadSchemaFromUri\n","import React, { useState, useEffect } from 'react'\nimport useUndo from 'use-undo'\nimport './App.css'\n\nimport axios from 'axios'\nimport { fromJS } from 'immutable'\nimport Ajv from 'ajv'\n\nimport { ThemeProvider, GlobalStyle,\n         Header, Column, Container, Row,\n         Button, ButtonBar, Spinner, SearchBar} from '@datapunt/asc-ui'\n\nimport { loadSchema,\n         fromAmsterdamSchema,\n         toAmsterdamSchema,\n         isValidUrl } from './components/Tools'\nimport Dropzone from './components/Dropzone'\nimport Dataset from './components/Dataset'\nimport Validation from './components/Validation'\nimport HighlightedJSON from './components/HighlightedJSON'\nimport loadSchemaFromUri from './components/SchemaLoader'\n\nimport SchemaContext, { getSchemaUri } from './components/SchemaContext'\n\nconst CONFIG_URL = 'config.json'\n\nconst emptyDataset = {\n  id: '',\n  type: 'dataset'\n}\n\nlet ajv\n\nasync function compileSchema (schema) {\n  ajv = new Ajv({\n    loadSchema: loadSchema\n  })\n\n  const validate = await ajv.compileAsync(schema)\n  return validate\n}\n\n\nfunction copyToClipboard (schema, setJustCopied) {\n  setJustCopied(true)\n  const schemaString = JSON.stringify(schema, null, 2)\n  navigator.clipboard.writeText(schemaString)\n\n  window.setTimeout(() => {\n    setJustCopied(false)\n  }, 1000)\n}\n\nfunction download (schema) {\n  const datasetId = schema.id || 'dataset'\n\n  const schemaString = JSON.stringify(schema, null, 2)\n  const data = new window.Blob([schemaString], {type: 'application/json'})\n  const url = window.URL.createObjectURL(data)\n\n  const a = document.createElement('a')\n  document.body.appendChild(a)\n  a.style = 'display: none'\n\n  a.href = url\n  a.download = `${datasetId}.json`\n  a.click()\n\n  window.URL.revokeObjectURL(url)\n  document.body.removeChild(a)\n}\n\nfunction onClearClick (event, {setDataset, resetDataset}) {\n  if (event.shiftKey) {\n    resetDataset(fromJS(emptyDataset))\n  } else {\n    setDataset(fromJS(emptyDataset))\n  }\n}\n\n\nfunction onDropped (schemaUri, data, setDataset) {\n  const schema = JSON.parse(data.contents[0])\n  const dataset = fromAmsterdamSchema(schemaUri, schema)\n  setDataset(dataset)\n}\n\nfunction onPreviewUrlChanged (value, setRemoteSchemaUri, setRemoteSchemaUriError) {\n    setRemoteSchemaUriError(false)\n    if (value) {\n        if (isValidUrl(value)) {\n            setRemoteSchemaUri(value)\n        } else {\n            setRemoteSchemaUriError(true)\n        }\n    }\n}\n\nconst columnSpan = { small: 1, medium: 2, big: 4, large: 8, xLarge: 8 }\nconst columnPush = { small: 0, medium: 0, big: 1, large: 2, xLarge: 2 }\n\nconst App = () => {\n  const [config, setConfig] = useState()\n  const [schemaUri, setSchemaUri] = useState()\n  const [valid, setValid] = useState()\n  const [compiledSchema, setCompiledSchema] = useState()\n  const [justCopied, setJustCopied] = useState(false)\n  const [remoteSchemaUri, setRemoteSchemaUri] = useState()\n  const [previewMode, setPreviewMode] = useState()\n  const [remoteSchemaUriError, setRemoteSchemaUriError]= useState()\n  const [loading, setLoading] = useState()\n\n  const [\n    datasetState, {\n      set: setDataset,\n      reset: resetDataset,\n      undo,\n      redo,\n      canUndo,\n      canRedo\n    }\n  ] = useUndo(fromJS(emptyDataset))\n\n  const { present: presentDataset } = datasetState\n\n  useEffect(() => {\n    if (!schemaUri) {\n      return\n    }\n\n    axios.get(schemaUri)\n      .then((response) => response.data)\n      .then((schema) => compileSchema(schema))\n      .then((compiledSchema) => {\n        setCompiledSchema(() => compiledSchema)\n      })\n  }, [schemaUri])\n\n  useEffect(() => {\n    axios.get(CONFIG_URL)\n      .then((response) => response.data)\n      .then((config) => {\n        setConfig(config)\n        setSchemaUri(getSchemaUri(config, 'schema'))\n      })\n  }, [])\n\n\n  let validIcon\n  if (valid !== undefined) {\n    if (valid) {\n      validIcon = (\n        <a href='#validation' className='emoji-link'>\n          <span role='img' aria-label='Validated!'>✅</span>\n        </a>\n      )\n    } else {\n      validIcon = (\n        <a href='#validation' className='emoji-link'>\n          <span role='img' aria-label='Errors found!'>❌</span>\n        </a>\n      )\n    }\n  }\n\n  const loaded = config && compiledSchema\n\n  useEffect(() => {\n    const searchParams = new URLSearchParams(window.location.search)\n    if (searchParams.get('preview') || '') {\n      setRemoteSchemaUri(searchParams.get('preview'))\n      setPreviewMode(true)\n    } else if (searchParams.get('edit') || '') {\n      setRemoteSchemaUri(searchParams.get('edit'))\n    }\n  }, [])\n\n  useEffect(() => {\n    if (!schemaUri || !remoteSchemaUri) {\n      return\n    }\n\n    if (isValidUrl(remoteSchemaUri)) {\n        loadSchemaFromUri(remoteSchemaUri, schemaUri, setDataset, setRemoteSchemaUriError, setLoading)\n    } else {\n        setRemoteSchemaUriError(true)\n    }\n  }, [schemaUri, remoteSchemaUri, setDataset, setRemoteSchemaUriError, setLoading])\n\n  return (\n    <ThemeProvider>\n      <GlobalStyle />\n      <Header\n        tall={false}\n        title='Amsterdam Schema Editor'\n        homeLink='https://github.com/Amsterdam/amsterdam-schema'\n        fullWidth={false} navigation={\n        <ButtonBar className='centered'>\n            <SearchBar\n                placeholder=\"Enter Schema URL to start editing\"\n                value={remoteSchemaUri}\n                onChange={(value) => {\n                    if (!value) {\n                        setRemoteSchemaUriError(false)\n                    }\n                }}\n                onSubmit={(value) => {\n                    onPreviewUrlChanged(value, setRemoteSchemaUri, setRemoteSchemaUriError)\n                }}\n            />\n            <div className='padding header-link'>\n              <a href='#amsterdam-schema'>View schema</a>\n              {validIcon}\n            </div>\n            <Button color='primary'\n              onClick={() => copyToClipboard(toAmsterdamSchema(schemaUri, presentDataset), setJustCopied)}>\n              {justCopied ? 'Copied!' : 'Copy'}</Button>\n            <Button color='primary'\n              onClick={() => download(toAmsterdamSchema(schemaUri, presentDataset))}>\n                Download</Button>\n            { previewMode ? null : (<Button\n              onClick={undo}\n              disabled={!canUndo}>❮ Undo</Button>) }\n            { previewMode ? null : (<Button\n              onClick={redo}\n              disabled={!canRedo}>Redo ❯</Button>) }\n            { previewMode ? null : (<Button color='secondary'\n              onClick={(event) => onClearClick(event, {setDataset, resetDataset})}\n              disabled={!canUndo && !canRedo}>Clear</Button>) }\n            </ButtonBar>\n        } />\n    <Container>\n        <Row halign='flex-start'>\n          <Column\n            wrap\n            span={columnSpan}\n            push={columnPush} >\n            { previewMode ? (\n            <h3>Preview of {remoteSchemaUri}</h3>) : null }\n            <div className='contents'>\n              { loading ? <Spinner /> : null }\n              { remoteSchemaUriError ? <p className='validation validation-errors'>Incorrect URL</p> : null}\n              { remoteSchemaUri ? null : <Dropzone options={{\n                pattern: '.json',\n                multiple: false,\n                placeholder: 'Drop existing Amsterdam Schema JSON file here (or use the form below to create a new one)'\n                }} onDropped={(data) => onDropped(schemaUri, data, setDataset)} />}\n            </div>\n          </Column>\n        </Row>\n        <Row halign='flex-start'>\n          <Column\n            wrap\n            span={columnSpan}\n            push={columnPush} >\n            <div className='contents'>\n              <SchemaContext.Provider value={{\n                ajv, compiledSchema, config\n              }}>\n                {\n                  loaded ? (\n                    <div>\n                      <Dataset\n                        dataset={presentDataset}\n                        previewMode={previewMode}\n                        onUpdate={setDataset} />\n                    </div>\n                  ) : ''\n                }\n                <p>\n                  <strong>Important!</strong> Fields with a <span className='required'><span>yellow background</span></span> are required!\n                </p>\n                <h2 id='validation'>Validation</h2>\n                <Validation schema={toAmsterdamSchema(schemaUri, presentDataset)} onValidated={setValid} />\n                <h2 id='amsterdam-schema'>Amsterdam Schema</h2>\n                Click the Copy or Download button in the header to copy the Amsterdam Schema to your clipboard or to download a JSON file.\n                <HighlightedJSON json={toAmsterdamSchema(schemaUri, presentDataset)} />\n                <p>The source code of the Amsterdam Schema Editor is <a href='https://github.com/Amsterdam/schema-editor'>available on GitHub</a>.</p>\n              </SchemaContext.Provider>\n            </div>\n          </Column>\n        </Row>\n      </Container>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","var map = {\n\t\"./default/layouts\": 89\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 88;"],"sourceRoot":""}